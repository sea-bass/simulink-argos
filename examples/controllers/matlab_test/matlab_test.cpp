/* Include the controller definition */
#include "matlab_test.h"
/* Function definitions for XML parsing */
#include <argos3/core/utility/configuration/argos_configuration.h>
/* 2D vector definition */
#include <argos3/core/utility/math/vector2.h>

#include "testArgosModel.h"            // Model's header file
#include "rtwtypes.h"		       // MATLAB types


/****************************************/
/****************************************/

CMatlabTest::CMatlabTest() : m_mlObj(testArgosModelModelClass()) { }
   //m_pcWheels(NULL),
   //m_pcProximity(NULL),
   //m_cAlpha(10.0f)
   //m_fDelta(0.5f),
   //m_fWheelVelocity(2.5f),
   //m_cGoStraightAngleRange(-ToRadians(m_cAlpha),
   //                        ToRadians(m_cAlpha)) 

/****************************************/
/****************************************/

void CMatlabTest::Init(TConfigurationNode& t_node) {
   //CCI_DifferentialSteeringActuator* actuator = GetActuator<CCI_DifferentialSteeringActuator>("differential_steering"); // Need to get the actuator at the controller file level?!
   m_mlObj.initialize(this); // Autogenerated Initialize Method, modified to accept the actuator 
}

/****************************************/
/****************************************/

void CMatlabTest::ControlStep() {
   m_mlObj.step();  // Autogenerated Step Method
}

/****************************************/
/****************************************/

/*
void CMatlabTest::Destroy() {
   m_mlObj.terminate();  // Autogenerated Terminate method
}
*/

/*
 * This statement notifies ARGoS of the existence of the controller.
 * It binds the class passed as first argument to the string passed as
 * second argument.
 * The string is then usable in the configuration file to refer to this
 * controller.
 * When ARGoS reads that string in the configuration file, it knows which
 * controller class to instantiate.
 * See also the configuration files for an example of how this is used.
 */
REGISTER_CONTROLLER(CMatlabTest, "matlab_test_controller")
